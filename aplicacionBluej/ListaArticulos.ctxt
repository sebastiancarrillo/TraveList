#BlueJ class context
comment0.target=ListaArticulos
comment0.text=\n\ lista\ de\ articulos\ modela\ una\ lista\ con\ los\ articulos\ generada\n\ principalmente\ con\ datos\ basicos\ a\ la\ cual\ l\ se\ le\ pueden\n\ agregar\ o\ quitar\ elementos\n\ jusificacion\ de\ esta\ clase\:(seguridad)\ poder\ hacer\ programacion\ defensiva\ a\ la\ hora\ de\ agregar\ elementos\ a\ la\ lista,\ puesto\ que\ si\ es\ un\ \n\ atributo\ en\ viaje\ podria\ agregar\ elementos\ de\ forma\ descontrolada,\ tambien\ quitarle\ obligaciones\ a\ la\ clase\ viajes.\n\ \n\ @author\ Sebastian\ Carrillo\ -\ Jhon\ Melendez\ \n\ @version\ v1\n
comment1.params=dias\ noches\ clima\ balneario\ genero
comment1.target=ListaArticulos(int,\ int,\ Clima,\ boolean,\ int)
comment1.text=\n\ Constructor\ for\ objects\ of\ class\ ListaArticulos\n\ toma\ la\ lista\ basica\ de\ articulos\ para\ crear\ la\ lista\ del\ viaje\n\ @param\ genero\ es\ un\ entero\ 0-mujer\ \ 1-hombre\ \n
comment10.params=
comment10.target=void\ imprimirLista()
comment10.text=\n\ metodo\ para\ imprimir\ la\ lista\ actual\ de\ articulos\n
comment2.params=dias\ noches\ clima\ balneario\ genero\ lista
comment2.target=void\ generarLista(int,\ int,\ Clima,\ boolean,\ int,\ java.util.ArrayList)
comment2.text=\n\ generar\ la\ lista\ del\ viaje\ \n\ del\ viaje\ y\ genera\ una\ lista\ apropiada\n\ si\ ya\ existesolo\ debe\ poderse\ agregar\ \n\ \n\ @\ param\ \ Datefehca\ inicio,\ int\ cantidad\ de\ dias,\ int\ cantidad\ noche,\ numb\ clima,\ boolean\ confirmacion\ balnearioy\ lista\ a\ la\ quue\ se\ vana\ a\ agregar\ los\ articulos\n
comment3.params=
comment3.target=java.util.ArrayList\ getListaArticulos()
comment3.text=\n\ devuelve\ un\ clon\ de\ la\ lista\n\ \n\ @return\ \ \ \ ArrayList<Articulo>\ un\ clon\ de\ la\ lista\n
comment4.params=nombre\ descripcion\ cantidad\ prioridad\ lista
comment4.target=boolean\ agregaArticulo(java.lang.String,\ java.lang.String,\ int,\ Prioridad,\ java.util.ArrayList)
comment4.text=\n\ agrega\ un\ articulo\ lista\ de\ articulos\n\ debe\ validar\ que\ el\ elemento\ no\ se\ haya\ agregado\ ya,\ comparar...\n\ \n\ @param\ \ nuevo\ articulo\ a\ agregar\ y\ la\ listadode\ se\ va\ \ agregar\ utilice\ null\ para\ agregar\ a\ la\ lista\ principal\ de\ articulos\n\ @return\ \ \ \ true\ si\ se\ agrego\ exitosamente,\ false\ si\ no\n
comment5.params=nombre\ lista
comment5.target=boolean\ eliminaArticulo(java.lang.String,\ java.util.ArrayList)
comment5.text=\n\ elimina\ una\ actividad\ deseada\n\ \ \n\ @param\ \ articulo\ a\ eliminar\n\ @return\ \ \ \ true\ si\ se\ elimino\ exitosamente,\ false\ si\ no\n
comment6.params=nombre\ lista
comment6.target=Articulo\ buscarArticuloPorNombre(java.lang.String,\ java.util.ArrayList)
comment6.text=\n\ encontrar\ articulo\ segun\ indice\n\ \n\ @param\ \ nombre\ del\ articulo\n\ @return\ \ \ \ actividad\ encontrada\ o\ null\n
comment7.params=dias\ noches\ clima\ balneario\ genero
comment7.target=boolean\ regenerarLista(int,\ int,\ Clima,\ boolean,\ int)
comment7.text=cuando\ se\ modifica\ algo\ en\ los\ parametros\ de\ viaje\ se\ cambia\ la\ lista\ basica\ y\ se\ actualiza\ en\ el\ sistema\n\ \nsi\ miran\ cuales\ objetos\ de\ la\ lista\ basica\ han\ sido\ eliminados\ de\ la\ lista\ real\ para\ no\ volverlos\ a\ agregar,\n\ \n\ @param\ los\ datos\ del\ viaje\n\ \n
comment8.params=
comment8.target=java.lang.Object\ clone()
comment8.text=\n\ codigo\ para\ poder\ clonar\ los\ objeto,\ realmente\ es\ de\ la\ clase\ object\n
comment9.params=busqueda
comment9.target=java.util.ArrayList\ buscaCoincidencias(java.lang.String)
comment9.text=\n\ metodo\ para\ buscar\ coincidencias\ de\ una\ buqueda\ tanto\ en\ nombres\ como\ en\ decripcion\n
numComments=11
